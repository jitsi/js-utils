name: CI

on:
  push:
    branches: [master, main]
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-node@v6
      with:
        node-version: 24
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-node@v6
      with:
        node-version: 24
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: |
        npm run test:coverage 2>&1 | tee test-output.log
        echo "TEST_EXIT_CODE=${PIPESTATUS[0]}" >> $GITHUB_ENV

    - name: Parse test results
      if: always()
      id: test-results
      run: ./.github/workflows/scripts/parse-test-results.sh test-output.log

    - name: Generate test summary
      if: always()
      run: |
        PASSED="${{ steps.test-results.outputs.passed }}"
        FAILED="${{ steps.test-results.outputs.failed }}"
        TOTAL="${{ steps.test-results.outputs.total }}"

        ./.github/workflows/scripts/generate-test-summary.sh "$PASSED" "$FAILED" "$TOTAL" "$TEST_EXIT_CODE"

    - name: Create test results check
      if: always() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const createTestCheck = require('./.github/workflows/scripts/create-test-check.js');
          await createTestCheck({
            github,
            context,
            passed: '${{ steps.test-results.outputs.passed }}',
            failed: '${{ steps.test-results.outputs.failed }}',
            total: '${{ steps.test-results.outputs.total }}'
          });

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false
        verbose: true

    - name: Upload coverage report as artifact
      if: always()
      uses: actions/upload-artifact@v5
      with:
        name: coverage-report
        path: coverage/
        retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-node@v6
      with:
        node-version: 24
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build
